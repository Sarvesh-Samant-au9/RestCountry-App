[{"F:\\Downloads\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\index.js":"1","F:\\Downloads\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\App.js":"2","F:\\Downloads\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\EachCountry.js":"3","F:\\Downloads\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\AllCountry.js":"4","C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\index.js":"5","C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\App.js":"6","C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\AllCountry.js":"7","C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\EachCountry.js":"8","C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\CountryByCode.js":"9","C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\TabsInfo.js":"10","C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\NavBar\\Navbar.js":"11","C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\Navbar\\Navbar.js":"12","C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\Region\\Asia.js":"13","C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\Weather.js":"14"},{"size":198,"mtime":1608034212637,"results":"15","hashOfConfig":"16"},{"size":852,"mtime":1608037128480,"results":"17","hashOfConfig":"16"},{"size":898,"mtime":1608036611355,"results":"18","hashOfConfig":"16"},{"size":415,"mtime":1608036297176,"results":"19","hashOfConfig":"16"},{"size":720,"mtime":1609185087462,"results":"20","hashOfConfig":"21"},{"size":7061,"mtime":1610396168421,"results":"22","hashOfConfig":"21"},{"size":4813,"mtime":1610398437075,"results":"23","hashOfConfig":"21"},{"size":2992,"mtime":1610399072403,"results":"24","hashOfConfig":"21"},{"size":3369,"mtime":1610377359050,"results":"25","hashOfConfig":"21"},{"size":7975,"mtime":1610398777994,"results":"26","hashOfConfig":"21"},{"size":1822,"mtime":1608752669644,"results":"27","hashOfConfig":"21"},{"size":2623,"mtime":1610376354480,"results":"28","hashOfConfig":"21"},{"size":4435,"mtime":1610398907296,"results":"29","hashOfConfig":"21"},{"size":4377,"mtime":1610377279732,"results":"30","hashOfConfig":"21"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wvy8et",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"yp7bnu",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"43"},"F:\\Downloads\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\index.js",[],"F:\\Downloads\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\App.js",["63"],"F:\\Downloads\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\EachCountry.js",["64"],"import React, { Component } from \"react\";\r\n\r\nexport class EachCountry extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"py-5\">\r\n          <div className=\"container\">\r\n            <div className=\"row hidden-md-up\">\r\n              <div className=\"col-md-4\">\r\n                <div className=\"card py-2\">\r\n                  <img\r\n                    className=\"card-img-top\"\r\n                    src=\"...\"\r\n                    alt=\"Card image cap\"\r\n                    style={{ width: \"10rem\" }}\r\n                  />\r\n                  <div className=\"card-body\">\r\n                    <p className=\"card-text\">\r\n                      {this.props.name.name}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EachCountry;\r\n",["65","66"],"F:\\Downloads\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\AllCountry.js",[],"C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\index.js",[],["67","68"],"C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\App.js",[],"C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\AllCountry.js",[],"C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\EachCountry.js",[],"C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\CountryByCode.js",[],"C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\TabsInfo.js",["69","70","71"],"C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\NavBar\\Navbar.js",[],"C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\Navbar\\Navbar.js",[],"C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\Region\\Asia.js",["72"],"C:\\Users\\Sarvesh\\Desktop\\rest-countries-api-with-color-theme-switcher-master\\restc\\src\\Components\\Weather.js",["73","74"],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"./Weather.css\";\r\nconst APIKEY = `388053a21f6b02d9812861c21150602f`;\r\n\r\nconst Weather = ({ latitude, longitude }) => {\r\n  // console.log(latitude);\r\n  // console.log(longitude);\r\n  const [maxTemp, setMaxTemp] = useState(\"\");\r\n  const [minTemp, setMinTemp] = useState(\"\");\r\n  const [temp, setTemp] = useState(\"\");\r\n  const [sunrise, setSunrise] = useState(\"\");\r\n  const [sunset, setSunset] = useState(\"\");\r\n  const [humidity, setHumidity] = useState(\"\");\r\n  const [avgTemp, setAvgTemp] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [windSpeed, setWindSpeed] = useState(\"\");\r\n  const [winDeg, setWindDeg] = useState(\"\");\r\n  const [icon, setIcon] = useState(\"\");\r\n  const [main, setMain] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getWeatherData = async () => {\r\n      const fetchDetails = await fetch(\r\n        `//api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${APIKEY}`\r\n      );\r\n\r\n      const data = await fetchDetails.json();\r\n      setMaxTemp(data.main.temp_max);\r\n      setMinTemp(data.main.temp_min);\r\n      setTemp(data.main.temp);\r\n      setAvgTemp(data.main.feels_like);\r\n      setHumidity(data.main.humidity);\r\n      setDescription(data.weather[0].description);\r\n      setIcon(data.weather[0].icon);\r\n      setMain(data.weather[0].main);\r\n      setSunrise(data.sys.sunrise);\r\n      setSunset(data.sys.sunset);\r\n      setWindDeg(data.wind.deg);\r\n      setWindSpeed(data.wind.speed);\r\n      console.log(data);\r\n    };\r\n    getWeatherData();\r\n  }, []);\r\n  const convertTime = (parameter) => {\r\n    const date = parameter * 1000;\r\n    const mDate = new Date(1609567497 * 1000).toString();\r\n    console.log(mDate);\r\n    const convDate = new Date(date).toString();\r\n    return convDate;\r\n  };\r\n  return (\r\n    <div>\r\n      <ul className=\"list-group weatherElements\">\r\n        <li className=\"list-group-item\">\r\n          <SpanHeadingTag>Temperature Info</SpanHeadingTag>\r\n          <li className=\"list-group-item\">\r\n            Maximum Temperture <SpanTag>{maxTemp} &deg;K</SpanTag>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Minimum Temperature <SpanTag>{minTemp} &deg;K</SpanTag>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Average Temperature <SpanTag>{avgTemp} &deg;K</SpanTag>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Scalable Temperature <SpanTag>{temp} &deg;K</SpanTag>\r\n          </li>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <SpanHeadingTag>Weather Information Card</SpanHeadingTag>\r\n          <li className=\"list-group-item\">\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\r\n              alt=\"image Weather\"\r\n            />\r\n            The Weather Today appears to be <SpanTag> {description} </SpanTag>\r\n            {\"\"}\r\n            with the temperature {\"\"}\r\n            <SpanTag> {temp}.</SpanTag>\r\n            In short it is <SpanTag>{main}</SpanTag>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Wind Blows at speed of <SpanTag>{windSpeed} </SpanTag> with the\r\n            degree of <SpanTag> {winDeg} </SpanTag>\r\n          </li>\r\n\r\n          <li className=\"list-group-item\">\r\n            Humidity in the area is <SpanTag> {humidity}</SpanTag>\r\n          </li>\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          <SpanHeadingTag>Sunrise and Sunset</SpanHeadingTag>\r\n          <li className=\"list-group-item\">\r\n            Sun will rise at <SpanTag>{convertTime(sunrise)} </SpanTag>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Sun will set at <SpanTag>{convertTime(sunset)}</SpanTag>\r\n          </li>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SpanTag = styled.div`\r\n  display: inline-block;\r\n  font-size: 1.5rem;\r\n  color: red;\r\n  &:hover {\r\n    color: white;\r\n    background-color: red;\r\n    font-family: cursive;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst SpanHeadingTag = styled.h2`\r\n  font-family: cursive;\r\n  color: red;\r\n  display: inline-block;\r\n  font-weight: 100;\r\n  transition: all 0.4s ease-in-out;\r\n  &:hover {\r\n    color: white;\r\n    background-color: red;\r\n    transform: skewY(-2deg);\r\n  }\r\n`;\r\nexport default Weather;\r\n",{"ruleId":"75","severity":1,"message":"76","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":19},{"ruleId":"79","severity":1,"message":"80","line":12,"column":19,"nodeType":"81","endLine":17,"endColumn":21},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"82","replacedBy":"86"},{"ruleId":"84","replacedBy":"87"},{"ruleId":"75","severity":1,"message":"88","line":11,"column":10,"nodeType":"77","messageId":"78","endLine":11,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":41,"column":6,"nodeType":"91","endLine":41,"endColumn":8,"suggestions":"92"},{"ruleId":"75","severity":1,"message":"93","line":83,"column":7,"nodeType":"77","messageId":"78","endLine":83,"endColumn":22},{"ruleId":"89","severity":1,"message":"94","line":24,"column":6,"nodeType":"91","endLine":24,"endColumn":8,"suggestions":"95"},{"ruleId":"89","severity":1,"message":"96","line":44,"column":6,"nodeType":"91","endLine":44,"endColumn":8,"suggestions":"97"},{"ruleId":"79","severity":1,"message":"80","line":73,"column":13,"nodeType":"81","endLine":76,"endColumn":15},"no-unused-vars","'EachCountry' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["98"],"no-negated-in-lhs",["99"],["98"],["99"],"'worldPop' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.populationInfo.WorldPopulation' and 'solutionPop'. Either include them or remove the dependency array. If 'setWorldPop' needs the current value of 'props.populationInfo.WorldPopulation', you can also switch to useReducer instead of useState and read 'props.populationInfo.WorldPopulation' in the reducer.","ArrayExpression",["100"],"'WorldPopulation' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'allCountryArray' and 'code'. Either include them or remove the dependency array.",["101"],"React Hook useEffect has missing dependencies: 'latitude' and 'longitude'. Either include them or remove the dependency array.",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},"Update the dependencies array to be: [props.populationInfo.WorldPopulation, solutionPop]",{"range":"109","text":"110"},"Update the dependencies array to be: [allCountryArray, code]",{"range":"111","text":"112"},"Update the dependencies array to be: [latitude, longitude]",{"range":"113","text":"114"},[1694,1696],"[props.populationInfo.WorldPopulation, solutionPop]",[828,830],"[allCountryArray, code]",[1629,1631],"[latitude, longitude]"]